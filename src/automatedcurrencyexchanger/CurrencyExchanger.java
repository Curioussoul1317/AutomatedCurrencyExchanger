/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package automatedcurrencyexchanger;

/**
 *
 * @author CouriousSoul
 */
import static CurrencyRecognition.RecognitionProcess.ImageResult;
import automatedcurrencyexchanger.ErrorLogs.PathConfiguration;
import static automatedcurrencyexchanger.ImageProcess.ImageProcessing.SegmentSize;
import javax.swing.ImageIcon;
import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;


public class CurrencyExchanger extends javax.swing.JFrame {
 private HashMap<Integer, Integer> addedDollors;
 boolean valuesAdded = false;
    /**
     * Creates new form CurrencyExchanger
     */
    public CurrencyExchanger() {
        initComponents();
        initiateHashMap();
        //        ImageIcon imgThisImg = new ImageIcon("C:\\Users\\CouriousSoul\\Desktop\\AutomatedCurrencyExchanger\\AutomatedCurrencyExchanger\\SystemImages\\SecondBack.jpg");
//       jLabelBackGround.setIcon(imgThisImg);
       // CurrencyExchanger.setContentPane(imgThisImg);
     
    }
        
  public void initiateHashMap() {
        addedDollors = new HashMap<>();
        addedDollors.put(5, 0);
        addedDollors.put(10, 0);
        addedDollors.put(20, 0);
        addedDollors.put(50, 0);
        addedDollors.put(100, 0);
    }

    public void addToList(int dollorVal) {
        int currentNumber = addedDollors.get(dollorVal);
        currentNumber++;
        addedDollors.replace(dollorVal, currentNumber);
        printDollorMetrix();
    }

    public void printDollorMetrix() {
        String message = "";

        for (int key : addedDollors.keySet()) {
            if (addedDollors.get(key) > 0) {
                String tempMsg = "";
                tempMsg = "[" + key + " : " + addedDollors.get(key) + "]\n";
                message += tempMsg;
            }
        }
      //  jLabel1.setText(message);
    }

    public int getValue() {
        int enteredDollor = 100;
        return enteredDollor;
    }

    public int getValue2() {
        int enteredDollor = 5;
        return enteredDollor;
    }

        
        
        


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        AddDollars = new javax.swing.JButton();
        ButtonExchnage = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        jButton1.setText("Press Continue");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(420, 220, 151, 23);

        AddDollars.setText("Exchange More");
        AddDollars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDollarsActionPerformed(evt);
            }
        });
        getContentPane().add(AddDollars);
        AddDollars.setBounds(420, 260, 150, 23);

        ButtonExchnage.setText("Exchange");
        ButtonExchnage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExchnageActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonExchnage);
        ButtonExchnage.setBounds(420, 300, 150, 23);

        jLabel1.setFont(new java.awt.Font("Aharoni", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("AUTOMATED CURRENCY EXCHANGE SYSTEM");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 10, 1330, 70);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
              PathConfiguration ImPath = new PathConfiguration();
        
     
//     String masterPath = (ImPath.GetImagePaths("original", null));
//     ImageCapture.captureImage(masterPath);
        
//      int segmentType = 1;
//      SegmentSize();
//       ImageResult ();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AddDollarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDollarsActionPerformed
        int val = getValue();
        addToList(val);
        val = getValue2();
        addToList(val);        // TODO add your handling code here:
    }//GEN-LAST:event_AddDollarsActionPerformed

    private void ButtonExchnageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExchnageActionPerformed
       String message = "";
        int total = 0;

        for (int key : addedDollors.keySet()) {
            int number = addedDollors.get(key);

            if (number > 0) {
                String tempMessage = "You have " + number + "of $" + key + " notes \n";
                total += (key * number);
                message += tempMessage;
            }
        }

        message += "\n\n";
        message += "Total is" + total;
       // jLabel1.setText(message);        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonExchnageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrencyExchanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrencyExchanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrencyExchanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrencyExchanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrencyExchanger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDollars;
    private javax.swing.JButton ButtonExchnage;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
